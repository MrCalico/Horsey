// <auto-generated />
using System;
using Horsey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Horsey.Data.Migrations
{
    [DbContext(typeof(HorseyContext))]
    [Migration("20200709040926_AddTimeStamp2Horses")]
    partial class AddTimeStamp2Horses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Horsey.Domain.Health", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Holistity")
                        .HasColumnType("int");

                    b.Property<int?>("HorseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.ToTable("Prognosis");
                });

            modelBuilder.Entity("Horsey.Domain.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Standing")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("Horsey.Domain.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HorseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Horsey.Domain.Standing", b =>
                {
                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("HorseId")
                        .HasColumnType("int");

                    b.Property<float>("Payout")
                        .HasColumnType("real");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("RaceId", "HorseId");

                    b.HasIndex("HorseId");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("Horsey.Domain.Health", b =>
                {
                    b.HasOne("Horsey.Domain.Horse", null)
                        .WithMany("HealthStats")
                        .HasForeignKey("HorseId");
                });

            modelBuilder.Entity("Horsey.Domain.Race", b =>
                {
                    b.HasOne("Horsey.Domain.Horse", null)
                        .WithMany("Races")
                        .HasForeignKey("HorseId");
                });

            modelBuilder.Entity("Horsey.Domain.Standing", b =>
                {
                    b.HasOne("Horsey.Domain.Horse", "Horse")
                        .WithMany()
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Horsey.Domain.Race", "Race")
                        .WithMany("Standings")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
