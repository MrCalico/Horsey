@page "/RaceEdit/{Id}"
@using WebClient.Data;
@inject NavigationManager NavigationManager

<h3>Race Details</h3>

@if (race == null)
{
    <div class="alert-heading">
        <span>Loading...</span>
    </div>
}
else
{
    <form>
        <label>Id:  </label><input type="number" @bind-value="race.Id" />
        <label>Name:</label><input type="text" @bind-value="race.Name" />
        <label>Date:</label><input type="date" @bind-value="race.Date" />
        <br />
    </form>
    
    <RaceStandingsSubform race="@race"></RaceStandingsSubform>

    //<ToolBarUpdateCancelDelete OnClick="ClickHandler"></ToolBarUpdateCancelDelete>
}
<div>@Status</div>

@code {
    [Parameter]
    public string Id { get; set; }

    HttpClient MyHttp = new HttpClient();
    Race race;
    string Status = "Page Starting";

    protected override async Task OnInitializedAsync()
    {
        MyHttp.BaseAddress = new Uri("Https://localhost:5011");
        var response = await MyHttp.GetAsync($"/API/Races/{Id}");
        if (response.IsSuccessStatusCode)
        {
            race = await response.Content.ReadFromJsonAsync<Race>();
        }
        else
        {
            race.Name = $"ERR: {response.StatusCode} {response.ReasonPhrase}";
        }
    }

    protected void ClickHandler()
    {

    }

    protected async Task Update()
    {
        var response = await MyHttp.PutAsJsonAsync($"/Api/Races/{race.Id}", race);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("RaceList");
        }
        else
        {
            Status = response.ReasonPhrase.ToString();
        }
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("RaceList");
    }

    protected async Task Delete()
    {
        var response = await MyHttp.DeleteAsync($"/Api/Races/{race.Id}");
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("RaceList");
        }
        else
        {
            Status = response.ReasonPhrase.ToString();
        }
    }

}
