@page "/RaceEdit/{Id}"
@using WebClient.Data;
@inject NavigationManager NavigationManager

<h3>Race Details</h3>

@if (race == null)
{
    <div class="alert-heading">
        <span>Loading...</span>
    </div>
}
else
{
    <form>
            <label>Id:  </label><input type="number" @bind-value="race.Id" />
            <label>Name:</label><input type="text"   @bind-value="race.Name" />
            <label>Date:</label><input type="date"   @bind-value="race.Date" />
        <br />
            @if (race.Standings != null)
            {
                foreach (Standing standing in race.Standings)
                {
                    <div class="row">
                        <label>Postiion: </label><input type="text" @bind-value="standing.Position" />
                        <label>Horse: </label><input type="number" width="1" @bind-value="standing.HorseId" /><input type="text" @bind-value="standing.Horse.Name" />
                    </div>
                }
            }
            <label>Number of Standings</label>@race.Standings.Count();
        <br />

            <button type="button" @onclick="Update">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-return-left" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M5.854 5.646a.5.5 0 0 1 0 .708L3.207 9l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z" />
                    <path fill-rule="evenodd" d="M13.5 2.5a.5.5 0 0 1 .5.5v4a2.5 2.5 0 0 1-2.5 2.5H3a.5.5 0 0 1 0-1h8.5A1.5 1.5 0 0 0 13 7V3a.5.5 0 0 1 .5-.5z" />
                </svg>
            </button>
            <button type="button" @onclick="Add">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-backspace" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M6.603 2h7.08a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-7.08a1 1 0 0 1-.76-.35L1 8l4.844-5.65A1 1 0 0 1 6.603 2zm7.08-1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08z" />
                    <path fill-rule="evenodd" d="M5.83 5.146a.5.5 0 0 0 0 .708l5 5a.5.5 0 0 0 .707-.708l-5-5a.5.5 0 0 0-.708 0z" />
                    <path fill-rule="evenodd" d="M11.537 5.146a.5.5 0 0 1 0 .708l-5 5a.5.5 0 0 1-.708-.708l5-5a.5.5 0 0 1 .707 0z" />
                </svg>

            </button>
            <button type="button" @onclick="Delete">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-trash" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                </svg>
            </button>
    </form>
}
<div>@Status</div>

@code {
    [Parameter]
    public string Id { get; set; }

    HttpClient MyHttp = new HttpClient();
    Race race;
    string Status = "Page Starting";

    protected override async Task OnInitializedAsync()
    {
        MyHttp.BaseAddress = new Uri("Https://localhost:5011");
        var response = await MyHttp.GetAsync($"/API/Races/{Id}");
        if (response.IsSuccessStatusCode)
        {
            race = await response.Content.ReadFromJsonAsync<Race>();
        }
        else
        {
            race.Name = $"ERR: {response.StatusCode} {response.ReasonPhrase}";
        }
    }

    protected async Task Update()
    {
        var response = await MyHttp.PutAsJsonAsync($"/Api/Races/{race.Id}", race);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("RaceList");
        }
        else
        {
            Status = response.ReasonPhrase.ToString();
        }
    }

    protected void Add()
    {
        NavigationManager.NavigateTo("RaceList");
    }

    protected async Task Delete()
    {
        var response = await MyHttp.DeleteAsync($"/Api/Races/{race.Id}");
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("RaceList");
        }
        else
        {
            Status = response.ReasonPhrase.ToString();
        }
    }

}
