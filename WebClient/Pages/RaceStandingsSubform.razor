@page "/RaceStandingsSubForm/{Id}"
@using WebClient.Data;
@inject NavigationManager NavigationManager
@using WebClient.Shared;


<h3>RaceStandingsSubform</h3>


    @if (race.Standings != null)
     {
    <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <td>Position</td>
                <td>Standing</td>
                <td>HorseId</td>
                <td>Horse Name</td>
            </tr>
        </thead>
        <tbody>
            @foreach (Standing standing in race.Standings)
            {
            <tr>
                <td><input type="text" @bind-value="standing.Position" /></td>
                <td><input type="number" width="1" @bind-value="standing.HorseId" /></td>
                <td><input type="text" @bind-value="standing.Horse.Name" /></td>
                <td><ToolbarUpdateCancelDelete CmdChanged="ClickHandler"></ToolbarUpdateCancelDelete></td>
            </tr>
            }
        </tbody>
    </table>
    }
  }
        
    <label>Number of Standings</label>
    @race.Standings.Count();
    <br />

    @code {

        [Parameter]
        public Race race { get; set; }

private int cmd { get; set; }

    private HttpClient _httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        // I don't know yet
    }


    async void ClickHandler(int cmd)
    {
        switch (cmd)
        {
            case (int)ButtonClick.Update:
                Console.WriteLine("ButtonClick.Update");
                break;
            case (int)ButtonClick.Cancel:
                Console.WriteLine("ButtonClick.Cancel");
                break;
            case (int)ButtonClick.Delete:
                Console.WriteLine("ButtonClick.Delete");
                break;
        }
    }

    private void Update() { }
    private void Add() { }
    private void Delete() { }


    }
