@page "/HorseList"
@using WebClient.Data;
@inject NavigationManager NavigationManager

<h3>Horse List</h3>

<table class="table">
    <thead>
        <tr>
            <th scope="col">id</th>
            <th scope="col">Name</th>
            <th scope="col">Age</th>
            <th scope="col">Health</th>
            <th scope="col">Races</th>
            <th scopte="col">Standing</th>

        </tr>
    </thead>
    <tbody>
        @if (horseList != null)
        {
            foreach (var horse in horseList)
            {
                <tr scope="row">
                    <td>@horse.Id</td>
                    <td> @horse.Name</td>
                    <td>@(DateTime.Today.Year - horse.Birthday.Year)</td>
                    <td>@horse.HealthStats.Count()</td>
                    <td>@horse.Races.Count()</td>
                    <td>@horse.Standing</td>
                    <td>
                        <button @onclick=@(()=>Edit(horse))>
                            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil-square" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code {

    private Horse horse = new Horse();
    private Horse[] horseList;
    HttpClient MyHttp = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        MyHttp.BaseAddress = new Uri("https://localhost:5011");
        await refreshList();
    }

    protected void Edit(Horse h)
    {
        NavigationManager.NavigateTo($"HorseEdit/{h.Id}");
    }

    private async Task refreshList()
    {
        var response = await MyHttp.GetAsync("/API/Horsey/");
        if (response.IsSuccessStatusCode)
        {
            horseList = await response.Content.ReadFromJsonAsync<Horse[]>();
        }
        else
        {
            horse.Name = $"ERR: {response.StatusCode} {response.ReasonPhrase}";
        }

    }

}
